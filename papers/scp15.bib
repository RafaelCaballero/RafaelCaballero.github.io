@article{Caballero2015156,
title = "Two type extensions for the constraint modeling language MiniZinc ",
journal = "Science of Computer Programming ",
volume = "111, Part 1",
number = "",
pages = "156 - 189",
year = "2015",
note = "Special Issue on Principles and Practice of Declarative Programming (PPDP 2013) ",
issn = "0167-6423",
doi = "http://dx.doi.org/10.1016/j.scico.2015.04.007",
url = "http://www.sciencedirect.com/science/article/pii/S0167642315000805",
author = "Rafael Caballero and Peter J. Stuckey and Antonio Tenorio-Fornés",
keywords = "Constraint programming",
keywords = "NULL values",
keywords = "Union types ",
abstract = "Abstract In this paper we present two type extensions for the modeling language MiniZinc that allow the representation of some problems in a more natural way. The first proposal, called MiniZinc⋆, extends existing types with additional values. The user can specify both the extension of a predefined type with new values, and the behavior of the operations with relation to the new types. We illustrate the usage of MiniZinc⋆ to model SQL-like problems with integer variables extended with \{NULL\} values. The second extension, MiniZinc+, introduces union types in the language. This allows defining recursive types such as trees, which are very useful for modeling problems that involve complex structures. A new case statement is introduced to select the different components of union type terms. The paper shows how a model defined using these extensions can be transformed into a MiniZinc model which is equivalent to the original model. "
}

